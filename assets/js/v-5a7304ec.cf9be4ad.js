(self.webpackChunk=self.webpackChunk||[]).push([[1520],{4672:(e,i,l)=>{"use strict";l.r(i),l.d(i,{data:()=>t});const t={key:"v-5a7304ec",path:"/computer-base/Git.html",title:"Git",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Git 常用命令",slug:"git-常用命令",children:[]},{level:2,title:"分支",slug:"分支",children:[]},{level:2,title:"标签",slug:"标签",children:[]},{level:2,title:"SSH",slug:"ssh",children:[]},{level:2,title:"user",slug:"user",children:[]},{level:2,title:"问题场景",slug:"问题场景",children:[]},{level:2,title:"注意",slug:"注意",children:[]},{level:2,title:"问题",slug:"问题",children:[{level:3,title:"git config proxy",slug:"git-config-proxy",children:[]}]},{level:2,title:"GitHub",slug:"github",children:[]},{level:2,title:"参考",slug:"参考",children:[]}],filePathRelative:"computer-base/Git.md",git:{updatedTime:1626953563e3,contributors:[]}}},4483:(e,i,l)=>{"use strict";l.r(i),l.d(i,{default:()=>W});var t=l(6252);const a=(0,t.uE)('<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h1><p><img src="/img/computer-base/git命令速查.png" alt="Git 常用命令"></p><h2 id="git-常用命令" tabindex="-1"><a class="header-anchor" href="#git-常用命令" aria-hidden="true">#</a> Git 常用命令</h2><ul><li><code>git status</code> 查看状态</li><li><code>git add</code> 添加变动至暂存区</li><li><code>git commit -m &#39;xxx&#39;</code> 提交暂存区至工作区</li><li><code>git push</code> 拉取代码</li><li><code>cat xx.js</code> 查看文件</li><li><code>git log</code> 打印 git 日志</li><li><code>git reset</code> 回退版本</li><li><code>git checkout -- xx.js</code> 把工作区的修改全部撤回</li><li><code>git diff HEAD -- xx.js</code> 查看当前的变动</li><li><code>git pull</code> 推送代码</li></ul><h2 id="分支" tabindex="-1"><a class="header-anchor" href="#分支" aria-hidden="true">#</a> 分支</h2><ul><li>查看分支 <code>git branch</code></li><li>创建分支 <code>git branch xx</code>(分支名称)</li><li>切换分支 <code>git checkout xx</code>(分支名称)</li><li>创建并切换分支<code>git checkout -b xx</code>(分支名称)</li><li>合并分支 <code>git merge dev</code>(分支名称) 把当前分支合并到主分支</li><li>删除分支 <code>git branch -d dev</code>(分支名称)</li><li>查看远程分支详情 <code>git remote -v</code></li><li>推送指定分支 <code>git push origin dev</code>(分支名称)</li><li>切换分支：<code>git checkout &lt;name&gt;</code>或者<code>git switch &lt;name&gt;</code></li><li>创建+切换分支：<code>git checkout -b &lt;name&gt;</code>或者<code>git switch -c &lt;name&gt;</code></li><li>合并某分支到当前分支：<code>git merge &lt;name&gt;</code></li><li>删除分支：<code>git branch -d &lt;name&gt;</code></li><li>下载指定分支 <ul><li><code>git clone -b dev2 http://git-test.etledu.com/ETLBOAO/BIM1xTrain.git</code></li><li><code>git clone -b</code> 指定从分支下载 dev2 指定从哪个分支下载 http git 链接</li></ul></li></ul><h2 id="标签" tabindex="-1"><a class="header-anchor" href="#标签" aria-hidden="true">#</a> 标签</h2><ul><li>命令<code>git tag &lt;tagname&gt;</code>用于新建一个标签，默认为 HEAD，也可以指定一个 commit id；</li><li>命令<code>git tag -a &lt;tagname&gt; -m &quot;blablabla...&quot;</code>可以指定标签信息；</li><li>命令<code>git tag</code>可以查看所有标签。</li><li>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</li><li>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</li><li>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</li><li>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</li></ul><h2 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh" aria-hidden="true">#</a> SSH</h2><p>最近的 http 链接总是出问题，还是 ssh 比较稳。</p>',10),c={href:"https://blog.csdn.net/qq_35495339/article/details/92847819",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Github 生成 SSH 秘钥（详细教程）"),o=(0,t.uE)('<h2 id="user" tabindex="-1"><a class="header-anchor" href="#user" aria-hidden="true">#</a> user</h2><p>切换帐号其实很简单， 如果你不知道现在本地 Git 用的帐号是什么，你可以输入</p><ul><li><code>git config user.name</code>查看用户名</li><li><code>git config user.email</code>查看用户邮箱</li></ul><p>修改用户名和邮箱的命令</p><ul><li><code>git config --global user.name &quot;Your_username&quot;</code></li><li><code>git config --global user.email &quot;Your_email&quot;</code></li></ul><h2 id="问题场景" tabindex="-1"><a class="header-anchor" href="#问题场景" aria-hidden="true">#</a> 问题场景</h2><ul><li>技术主管让你去再某个 git 分支上新建一个分支去做你的项目，那么如何在原远程分支的基础上新建自己的分支呢？ 解决方法</li><li>按照以下命令敲即可</li><li><code>git branch newBranch</code> -- 新建本地分支</li><li><code>git checkout newBranch</code> -- 本地切换到自己的分支</li><li><code>git pull origin xxxxBranch</code> -- 从远程目标分支 copy 代码</li><li><code>git push origin newBranch</code> -- 将本地新建的分支同步到服务器</li><li><code>git branch --set-upstream-to=origin/newbranch newbranch</code> -- 本地分支和远程分支建立追踪 到此为止，就完成了需求</li></ul><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h2><ul><li><code>push</code> 之前先 <code>pull</code> 代码</li></ul><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="git-config-proxy" tabindex="-1"><a class="header-anchor" href="#git-config-proxy" aria-hidden="true">#</a> git config proxy</h3><p>前一段时间因为墙很厚，github 的代码老是拉取失败，后来就设置了下代理，然后这两天在使用的时候就老报错。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1. fatal: unable to access &#39;http://xxx&#39;: OpenSSL SSL_read: Connection was reset, errno 10054\n2. fatal: unable to access &#39;http://xxx&#39;: Received HTTP code 400 from proxy after CONNECT\n3. fatal: unable to access &#39;http://xxx&#39;: Failed to connect to github.com port 443: Timed out\n4. fatal: unable to access &#39;http://xxx&#39;: Received HTTP code 400 from proxy after CONNECT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="github" tabindex="-1"><a class="header-anchor" href="#github" aria-hidden="true">#</a> GitHub</h2>',14),r={href:"https://blog.csdn.net/u014028063/article/details/81559573",target:"_blank",rel:"noopener noreferrer"},n=(0,t.Uk)("github 上 fork 原项目，如何将本地仓库代码更新到最新版本？"),h=(0,t.Wm)("p",null,"如出现 Please enter a commit message to explain why this merge is necessary.（请输入提交消息来解释为什么这种合并是必要的）",-1),s=(0,t.Wm)("p",null,"git 在 pull 或者合并分支的时候有时会遇到这个界面。可以不管(直接下面 3,4 步)，如果要输入解释的话就需要:",-1),g=(0,t.Wm)("p",null,"1.按键盘字母 i 进入 insert 模式",-1),u=(0,t.Wm)("p",null,"2.修改最上面那行黄色合并信息,可以不修改",-1),m=(0,t.Wm)("p",null,'3.按键盘左上角"Esc"',-1),p=(0,t.Wm)("p",null,'4.输入":wq",注意是冒号+wq,按回车键即可',-1),b=(0,t.Wm)("h2",{id:"参考",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),(0,t.Uk)(" 参考")],-1),x={href:"https://www.liaoxuefeng.com/wiki/896043488029600/897889638509536",target:"_blank",rel:"noopener noreferrer"},f=(0,t.Uk)("廖雪峰 Git 教程"),v={href:"https://www.progit.cn/",target:"_blank",rel:"noopener noreferrer"},k=(0,t.Uk)("Pro Git 中文版阅读（第二版）"),W={render:function(e,i){const l=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[a,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",c,[d,(0,t.Wm)(l)])])]),o,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",r,[n,(0,t.Wm)(l)])])]),h,s,g,u,m,p,b,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",x,[f,(0,t.Wm)(l)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",v,[k,(0,t.Wm)(l)])])])],64)}}}}]);