(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{409:function(a,e,n){"use strict";n.r(e);var r=n(43),t=Object(r.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"为什么要进行拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行拷贝"}},[a._v("#")]),a._v(" 为什么要进行拷贝")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var obj1={\n    value: 'a'\n}\nvar obj2 = obj1;\nobj2.value='b';\nconsole.log(obj1);//{ value: 'b' }\n")])])]),n("p",[a._v("因为对象是引用类型，所以赋值时的操作仅是赋予相同的地址，当对其中一个对象进行操作时，就会影响其他的对象。解决这个问题就需要拷贝了。")]),a._v(" "),n("h2",{attrs:{id:"浅拷贝："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝："}},[a._v("#")]),a._v(" 浅拷贝：")]),a._v(" "),n("p",[a._v("使用原生的"),n("code",[a._v("Object.assign()")]),a._v("方法就可以实现浅拷贝")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var obj1={\n    value: 'a'\n}\nvar obj2 = Object.assign({},obj1);\nobj2.value='b';\nconsole.log(obj1);//{ value: 'a' }\n")])])]),n("p",[a._v("但是如果拷贝的源对象当中包含对象时，"),n("code",[a._v("OBject.assign()")]),a._v("方法只会拷贝对象的引用地址")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var obj1={\n    value: 'a',\n    obj3:{\n        value2: 'c'\n    }\n}\nvar obj2 = Object.assign({},obj1);\nobj2.obj3.value2='b';\nconsole.log(obj1);//{ value: 'a', obj3:{ value2: 'b' } }\n")])])]),n("h2",{attrs:{id:"深拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[a._v("#")]),a._v(" 深拷贝")]),a._v(" "),n("p",[a._v("如果要拷贝的对象中包含对象，就需要深拷贝了，一般使用原生的方法"),n("code",[a._v("JSON.parse(JSON.stringify(obj))")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("j1={\n    value: 'a',\n    obj3:{\n        value2: 'c'\n    },\n    arr:[1,2,3]\n}\nvar obj2 = JSON.parse(JSON.stringify(obj1));\nobj2.obj3.value2='b';\nobj2.arr[0]= \"a\";\nconsole.log(obj2);//{ value: 'a', obj3:{ value2: 'b' }, arr:['a',2,3] }\nconsole.log(obj1);//{ value: 'a', obj3:{ value2: 'c' }, arr:[1,2,3] } 没有发生改变\n")])])]),n("h2",{attrs:{id:"实现一个对数组和对象的深拷贝的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现一个对数组和对象的深拷贝的方法"}},[a._v("#")]),a._v(" 实现一个对数组和对象的深拷贝的方法")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("var obj={\n    name: 'znl',\n    age: 18,\n    friend:{\n        name: 'borys',\n        age: 20\n    },\n    arr:[1,2,[3,4]]\n}\n\nfunction copy(obj){\n    var type=Object.prototype.toString.call(obj);\n    if(!(type == '[object Array]' || type == '[object Object]')){\n        return 'Type Error!';\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\n\nvar obj2= copy(obj);\nconsole.log(obj.friend === obj2.friend)//false\nconsole.log(obj.arr === obj2.arr)//false\n")])])]),n("p",[a._v("参考：")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",target:"_blank",rel:"noopener noreferrer"}},[a._v("MDN Object.assign"),n("OutboundLink")],1)]),a._v(" "),n("li",[n("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/#%E6%B5%85%E6%8B%B7%E8%B4%9D",target:"_blank",rel:"noopener noreferrer"}},[a._v("深拷贝"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=t.exports}}]);