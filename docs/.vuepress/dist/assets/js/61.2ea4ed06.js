(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{356:function(e,v,t){"use strict";t.r(v);var a=t(43),_=Object(a.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"尺寸"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#尺寸"}},[e._v("#")]),e._v(" 尺寸")]),e._v(" "),t("p",[e._v("在移动端页面，我用到的尺寸单位有"),t("code",[e._v("em")]),e._v("、"),t("code",[e._v("rem")]),e._v("、"),t("code",[e._v("vw")]),e._v("、"),t("code",[e._v("px")]),e._v("基本不用，但我会设置Dom根元素"),t("code",[e._v("html")]),e._v("字体大小为"),t("code",[e._v("14px")]),e._v("，一来方便"),t("code",[e._v("em")]),e._v("和"),t("code",[e._v("rem")]),e._v("的尺寸计算，二来"),t("code",[e._v("14px")]),e._v("是最常用的字体大小。")]),e._v(" "),t("blockquote",[t("p",[e._v("常规浏览器默认字体大小为"),t("code",[e._v("16px")]),e._v("，最小字体为"),t("code",[e._v("12px")]),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"em"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#em"}},[e._v("#")]),e._v(" em")]),e._v(" "),t("p",[e._v("首先你要有这样一个基础的认知：")]),e._v(" "),t("blockquote",[t("p",[e._v("假如一个元素没有重设字体大小，那么它的字体大小会继承父级元素，如果父级也没有设置大小，那么依次类推一直追溯到body、html。")])]),e._v(" "),t("p",[t("code",[e._v("em")]),e._v("是相对于当前元素字体大小计算像素值的，计算方法是"),t("code",[e._v("em")]),e._v("值 * 字体大小。")]),e._v(" "),t("p",[e._v("举例：\n一个元素设置了高度为"),t("code",[e._v("2em")]),e._v("，那么实际像素值为"),t("code",[e._v("2 * 14px = 28px")]),e._v("，而一旦这个元素重设了字体大小为"),t("code",[e._v("2em")]),e._v("，那么该元素高度值为"),t("code",[e._v("2 * 28px = 56px")]),e._v("。另外，其后的子元素的计算基数都会改变。")]),e._v(" "),t("p",[e._v("使用em时一旦有设置字体大小的样式出现就需要注意重新计算一些属性值大小了。")]),e._v(" "),t("h3",{attrs:{id:"rem"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rem"}},[e._v("#")]),e._v(" rem")]),e._v(" "),t("p",[e._v("与 "),t("code",[e._v("em")]),e._v(" 相比，这货看起来多了一个字母，显然是属于升级版本。\n"),t("code",[e._v("rem")]),e._v("是始终相对与 Dom 根元素html来计算像素值的。不管当前元素字体如何设置，计算时字体大小仍然以html的字体设置为基准。")]),e._v(" "),t("h3",{attrs:{id:"vw"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vw"}},[e._v("#")]),e._v(" vw")]),e._v(" "),t("p",[e._v("vw指的的当前屏幕宽度，与之对应的还有 vh，表示屏幕高度。如果屏幕宽为 "),t("code",[e._v("360px")]),e._v("，那么 "),t("code",[e._v("100vw = 360px")]),e._v("。")]),e._v(" "),t("p",[e._v("是否感觉并没有什么卵用？别着急，下面说一下我的一次适用经历。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('html：\n\n<div class="box">\n    <div class="inner">\n        <div class="cont cont-1"></div>\n        <div class="cont cont-2"></div>\n        <div class="cont cont-3"></div>\n    </div>\n<div>\ncss：\n\n.box {\n    width: 100%;\n    overflow: hidden;\n}\n.inner {\n    width: 300%;\n}\n.cont {\n    float: left;\n    width: 100%;\n}\n')])])]),t("p",[e._v("以上代码用以实现三屏的左右切换效果，外层容器.box和三个内容块宽度为屏幕宽度，三个内容块设置了左浮动样式。此时，内层容器.inner需要有3倍的屏幕宽度以承载三个内容块。\n但是由于宽度继承的关系，在内层容器.inner宽度改变后，内容块的宽度计算基数也改变了。此时设置的100%是等于父级元素宽度的，也就是三倍屏宽。")]),e._v(" "),t("p",[e._v("使用js是很容易解决这个问题的，不过"),t("code",[e._v("vw")]),e._v("显然是可以适用这个场景的。\n只需要如下设置便可解决问题。")]),e._v(" "),t("p",[t("code",[e._v(".cont { width: 100vw; }")]),e._v("\n该属性在兼容性为android 4.4+，谨慎使用。")]),e._v(" "),t("p",[t("code",[e._v("devicePixelRatio")]),e._v("\n在一个图表页中，我用canvas画了个饼图。发现在手机屏幕中区块颜色显得模糊。于是搜索资料就找到了这个属性，"),t("code",[e._v("window.devicePixelRatio")]),e._v("。\n目前我对这个属性的理解还不深，基本的理解为：屏幕缩放比。传送门：张鑫旭："),t("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/",target:"_blank",rel:"noopener noreferrer"}},[e._v("设备像素比devicePixelRatio简单介绍"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("我们通过写的css中像素仅为逻辑像素，就是你看到的宽度，而实际上手机屏幕单个点是可能存在多个像素的。")]),e._v(" "),t("p",[e._v("如果是常规页面元素是用不到这个属性的，而canvas的真实宽度和css宽度是不一致的。\n计算方法为："),t("code",[e._v("canvas.width = canvas.style.width * devicePixelRatio。")])]),e._v(" "),t("p",[e._v("需要注意：一旦重设了canvas的真实宽度，那么canvas之上的一切元素都需要乘以"),t("code",[e._v("devicePixelRatio")]),e._v("进行缩放。")]),e._v(" "),t("h2",{attrs:{id:"布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[e._v("#")]),e._v(" 布局")]),e._v(" "),t("p",[e._v("在PC上为了兼容可恶的IE不得不使用大量的浮动来进行块级元素的并行排行。而在移动端我们有了更好的选择，但不是"),t("code",[e._v("inline-block")]),e._v("，而是flex。")]),e._v(" "),t("p",[e._v("使用flex可以轻易的实现等宽、散列、垂直居中、多行排列、底部对齐等等各种布局。")]),e._v(" "),t("p",[e._v("定义一个flex容器")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(".flex-row {\n    display: flex;\n}\n")])])]),t("p",[e._v("通过设置容器属性，可以呈现不同的排列对齐方式。")]),e._v(" "),t("h3",{attrs:{id:"flex-wrap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[e._v("#")]),e._v(" flex-wrap")]),e._v(" "),t("p",[e._v("定义容器换行方式，默认不换行。可设置换行和反向换行。")]),e._v(" "),t("h3",{attrs:{id:"flex-direction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[e._v("#")]),e._v(" flex-direction")]),e._v(" "),t("p",[e._v("排列方向，默认子元素从左到右顺序排列。通过设置该值可以实现反向排列或垂直方向的上下排列。")]),e._v(" "),t("h3",{attrs:{id:"justify-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[e._v("#")]),e._v(" justify-content")]),e._v(" "),t("p",[e._v("主轴（水平方向）对齐方式，默认左对齐。可以实现居中、右对齐、等宽间隔等排列。")]),e._v(" "),t("h3",{attrs:{id:"align-items"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[e._v("#")]),e._v(" align-items")]),e._v(" "),t("p",[e._v("侧轴（垂直）对齐方式。可实现垂直居中、底部对齐、基线对齐等。")]),e._v(" "),t("h3",{attrs:{id:"align-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[e._v("#")]),e._v(" align-content")]),e._v(" "),t("p",[e._v("多轴垂直对齐方式。")]),e._v(" "),t("p",[e._v("最后附上Demo：flex常用布局:https://imys.net/demo/flex.html")]),e._v(" "),t("p",[e._v("参考：")]),e._v(" "),t("p",[e._v("大漠："),t("a",{attrs:{href:"http://www.w3cplus.com/css3/flexbox-basics.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flexbox——快速布局神器"),t("OutboundLink")],1),e._v("\n阮一峰："),t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：语法篇"),t("OutboundLink")],1),e._v("\n阮一峰："),t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：实例篇"),t("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=_.exports}}]);