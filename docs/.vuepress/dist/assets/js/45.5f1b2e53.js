(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{373:function(s,e,n){"use strict";n.r(e);var o=n(43),a=Object(o.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"cookie和session-的关系和用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session-的关系和用法"}},[s._v("#")]),s._v(" cookie和session 的关系和用法")]),s._v(" "),n("p",[s._v("具体来说cookie机制采用的是在客户端保持状态的方案，而session机制采用的是在服务器端保持状态的方案。")]),s._v(" "),n("h4",{attrs:{id:"cookie"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[s._v("#")]),s._v(" cookie")]),s._v(" "),n("p",[s._v("cookie 常用于识别用户。cookie 是服务器留在用户计算机中的小文件。每当相同的计算机通过浏览器请求页面时，它同时会发送 cookie。通过 PHP，您能够创建并取回 cookie 的值。\n新建一个cookie：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("setcookie(name, value, expire, path, domain);\n//         名字  键值  过期时间  路径  域名\n")])])]),n("p",[s._v('PHP 的 $_COOKIE 变量用于取回 cookie 的值。\n在下面的例子中，我们取回了名为 "user" 的 cookie 的值，并把它显示在了页面上：')]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<?php\n// Print a cookie\necho $_COOKIE["user"];\n\n// A way to view all cookies\nprint_r($_COOKIE);\n?>\n')])])]),n("p",[s._v("在下面的例子中，我们使用 isset() 函数来确认是否已设置了 cookie：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<html>\n<body>\n\n<?php\nif (isset($_COOKIE["user"]))\n  echo "Welcome " . $_COOKIE["user"] . "!<br />";\nelse\n  echo "Welcome guest!<br />";\n?>\n\n</body>\n</html>\n')])])]),n("ul",[n("li",[s._v("cookie中键值只能为字符串")]),s._v(" "),n("li",[s._v("序列化serialize($); 成字符串")]),s._v(" "),n("li",[s._v("反序列化unserialize($); 成数组")])]),s._v(" "),n("p",[s._v("如何删除 cookie？\n当删除 cookie 时，您应当使过期日期变更为过去的时间点。\n删除的例子：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<?php \n// set the expiration date to one hour ago\nsetcookie("user", "", time()-3600);\n?>\n')])])]),n("h4",{attrs:{id:"session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[s._v("#")]),s._v(" session")]),s._v(" "),n("p",[s._v("PHP session 变量用于存储有关用户会话的信息，或更改用户会话的设置。Session 变量保存的信息是单一用户的，并且可供应用程序中的所有页面使用。\nPHP Session 变量\n当您运行一个应用程序时，您会打开它，做些更改，然后关闭它。这很像一次会话。计算机清楚你是谁。它知道你何时启动应用程序，并在何时终止。但是在因特网上，存在一个问题：服务器不知道你是谁以及你做什么，这是由于 HTTP 地址不能维持状态。\n通过在服务器上存储用户信息以便随后使用，PHP session 解决了这个问题（比如用户名称、购买商品等）。不过，会话信息是临时的，在用户离开网站后将被删除。如果您需要永久储存信息，可以把数据存储在数据库中。\nSession 的工作机制是：为每个访问者创建一个唯一的 id (UID)，并基于这个 UID 来存储变量。UID 存储在 cookie 中，亦或通过 URL 进行传导。\n开始使用session前，首先要开启session：在页面最开始时加上session_start();\n存储 Session 变量\n存储和取回 session 变量的正确方法是使用 PHP $_SESSION 变量：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<?php\nsession_start();\n// store session data\n$_SESSION['views']=1;\n?>\n\n<html>\n<body>\n\n<?php\n//retrieve session data\necho \"Pageviews=\". $_SESSION['views'];\n?>\n//输出 Pageviews=1\n</body>\n</html>\n")])])]),n("p",[s._v("session的垃圾回收机制\n找到服务器里的配置文件php-ini")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//修改 session.auto 0（手动启动）1（自动启动）修改后保存重启服务器\n查看session的保存地址 session.save\nsession.gc_probability=1\nsession.gc_divisor=1000\n//他有1/1000分支以的被回收\nsession。gc_maxlifetime=1400\n//最大过期时间\n")])])]),n("ul",[n("li",[s._v("不同浏览器访问一个网站 会产生不同的session文件")]),s._v(" "),n("li",[s._v("如果有则找到session文件 没有则创建一个新的session文件")])])])}),[],!1,null,null,null);e.default=a.exports}}]);