(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{395:function(e,f,r){"use strict";r.r(f);var n=r(43),t=Object(n.a)({},(function(){var e=this,f=e.$createElement,r=e._self._c||f;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("hr"),e._v(" "),r("h2",{attrs:{id:"title-nodejs中的bufferdate-2018-11-05-14-04-55tags-nodejs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#title-nodejs中的bufferdate-2018-11-05-14-04-55tags-nodejs"}},[e._v("#")]),e._v(' title: NodeJS中的Buffer\ndate: 2018-11-05 14:04:55\ntags: ["NodeJS"]')]),e._v(" "),r("h3",{attrs:{id:"buffer介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#buffer介绍"}},[e._v("#")]),e._v(" Buffer介绍")]),e._v(" "),r("p",[r("strong",[e._v("为什么要用Buffer？")])]),e._v(" "),r("ol",[r("li",[e._v("在Node/ES6 出现之前，前端工程师只需要进行一些简单的额字符串或者ODM操作就可以满足业务需求了，所有对二进制数据比较陌生。")]),e._v(" "),r("li",[e._v("在node出现之后，前端工程师面对的技术场景发送了变化，可以深入到网络传输、文件操作、图片处理等领域。而这些操作与二进制数据紧密相关。")]),e._v(" "),r("li",[e._v("在Node中的Buffer，是一个二进制数据容器，数据结构和数组类似，专门用于Node中的数据放。")])]),e._v(" "),r("h3",{attrs:{id:"新建buffer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#新建buffer"}},[e._v("#")]),e._v(" 新建Buffer")]),e._v(" "),r("p",[r("code",[e._v("Buffer.alloc(size[, fil[,encoding]])")]),e._v(" "),r("code",[e._v("size")]),e._v(":新建的buffer期望的长度\n"),r("code",[e._v("fill")]),e._v("用来预填充新建的Buffer的值 默认0\n"),r("code",[e._v("encoding")]),e._v(": 编码格式  默认：utf-8")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("/*\n        十六进制：00- ff\n        十进制 ：0- 255\n        二进制： 00000000- 11111111\n        0 / 1 代表一位 == 比特 \n        8bit = 1B\n        1kb = 1024 B\n        1mkb= 1024Kb\n        1GB = 1024m\n        1TB = 1024GB\n\n*/\n\n// 2. Buffer.alloc(size[, fill[, encoding]])\n/*\n类数组使用即可 可遍历 可选择下标等等\n初始化： 确定的长度 不能改变\n填充值\n\n*/\nlet buffer2= Buffer.alloc(10);//创建了一个长度是10的buffer\nbuffer2[0]= 10;//可以像使用数组一样使用buffer \nbuffer2[1]= oxfc;//传一个十六进制的直接取后两位 fc\nbuffer2[30]= 1;//这点和数组不同 溢出隐藏 \nconsole.log(buffer2);\n")])])]),r("h3",{attrs:{id:"buffer使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#buffer使用"}},[e._v("#")]),e._v(" Buffer使用")]),e._v(" "),r("p",[e._v("**使用新方法使用Buffer **")]),e._v(" "),r("ol",[r("li",[e._v("Buffer.form(str):将一个字符串转换成buffer")]),e._v(" "),r("li",[e._v("Buffer.alloc(size):创建一个指定大小的buffer")]),e._v(" "),r("li",[e._v("Buffer.alloUnsafe(size):创建一个指定大小的buffer，但是可能包含敏感数据。")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// 历史方法\n// let buffer = new Buffer(10);//类似 Array(10) 创建十个空间\n// console.log(buffer)// <Buffer 00 00 00 00 00 00 00 00 00 00>\n\n//1. 字符串转成二进制\nlet str= 'www.zhangningle.top';\nlet buffer= Buffer.from(str);\nconsole.log(buffer);//<Buffer 77 77 77 2e 7a 68 61 6e 67 6e 69 6e 67 6c 65 2e 74 6f 70>\n//把buffer转成十进制的\nconsole.log(buffer.toString())//www.zhangningle.top\n// 汉字转换成二进制后 一个汉字要用三个字节表示\n\n")])])]),r("p",[r("strong",[e._v("Buffer总结点：")])]),e._v(" "),r("ol",[r("li",[e._v("Buffer的结构和数组很像，操作方法也和数组很类似。")]),e._v(" "),r("li",[e._v("Buffer中是以二进制的方式储存数据的")]),e._v(" "),r("li",[e._v("Buffer是Node自带的，不需要引入，直接可以使用。")])])])}),[],!1,null,null,null);f.default=t.exports}}]);