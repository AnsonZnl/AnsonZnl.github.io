(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{398:function(e,t,n){"use strict";n.r(t);var a=n(43),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("因为业务需要，每个http请求都要加上一个请求头，所以每次都要写很多重复的代码。")]),e._v(" "),n("p",[e._v("现在尝试把wx.request简单的封装了一下，调用一个request方法，每次请求自动携带header头信息，这样就省事多了，包含了常见的get post put delete 四种请求方法，支持Promise方式调用。")]),e._v(" "),n("h2",{attrs:{id:"封装代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#封装代码"}},[e._v("#")]),e._v(" 封装代码")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("class request {\n  constructor() {\n    this._baseUrl = 'https://xxx.com/api';\n    this._token = wx.getStorageSync('token');\n    this._header = {'Authorization': 'Bearer ' + token}\n  }\n\n  /**\n   * GET类型的网络请求\n   */\n  getRequest(url, data, header = this._header) {\n    return this.requestAll(url, data, header, 'GET')\n  }\n\n  /**\n   * DELETE类型的网络请求\n   */\n  deleteRequest(url, data, header = this._header) {\n    return this.requestAll(url, data, header, 'DELETE')\n  }\n\n  /**\n   * PUT类型的网络请求\n   */\n  putRequest(url, data, header = this._header) {\n    return this.requestAll(url, data, header, 'PUT')\n  }\n\n  /**\n   * POST类型的网络请求\n   */\n  postRequest(url, data, header = this._header) {\n    return this.requestAll(url, data, header, 'POST')\n  }\n\n  /**\n   * 网络请求\n   */\n  requestAll(url, data, header, method) {\n    return new Promise((resolve, reject) => {\n      wx.request({\n        url: this._baseUrl + url,\n        data: data,\n        header: header,\n        method: method,\n        success: (res => {\n          if (res.statusCode === 200) {\n            //200: 服务端业务处理正常结束\n            resolve(res)\n          } else {\n            //其它错误，提示用户错误信息\n            reject(res)\n          }\n        }),\n        fail: (res => {\n          reject(res)\n        })\n      })\n    })\n  }\n}\n\nexport default request\n")])])]),n("h2",{attrs:{id:"使用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[e._v("#")]),e._v(" 使用方法")]),e._v(" "),n("p",[e._v("在app.js中引入：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import request from './request.js'\nApp({\n  myRequest(){\n    return new request();\n  }\n})\n")])])]),n("p",[e._v("然后在要使用的页面里引入使用即可：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const app = getApp();//新建页面时 默认引入\nconst ajax = app.myRequest();//初始化一个的request() 实例\n\nPage({\n  data:{},\n  onLoad(){\n    this.getData();  \n  },\n  getData(){\n    ajax.getRequest('/getList',{id: 1024}).then((res)=>{\n      console.log(res);\n    }).catch((err)=>{\n      console.log(err);\n    })\n  }\n})\n")])])]),n("p",[e._v("使用方法也是异常简单")]),e._v(" "),n("ul",[n("li",[e._v("比如Get请求就是："),n("code",[e._v("ajax.getRequest(url: String, data: Object);")])]),e._v(" "),n("li",[e._v("比如Post请求就是："),n("code",[e._v("ajax.postRequest(url: String, data: Object);")])]),e._v(" "),n("li",[e._v("...")])]),e._v(" "),n("p",[e._v("参考：\n"),n("a",{attrs:{href:"https://juejin.im/post/5b050e5651882542816aabfa",target:"_blank",rel:"noopener noreferrer"}},[e._v("封装wx.request"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);