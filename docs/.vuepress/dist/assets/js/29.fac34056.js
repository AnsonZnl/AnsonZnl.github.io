(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{397:function(e,n,t){"use strict";t.r(n);var r=t(43),s=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"文件系统（file-system）："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件系统（file-system）："}},[e._v("#")]),e._v(" "),t("strong",[e._v("文件系统（File System）：")])]),e._v(" "),t("ol",[t("li",[e._v("在Node中，文件系统的交互是非常重要的，服务器的本质就是将本地的文件发送给客户端，")]),e._v(" "),t("li",[e._v("Node通过fs模块来和文件系统进行交互，该模块提供了一些标准的文件访问API类打开、读取、写入文件、以及与其交互。")]),e._v(" "),t("li",[e._v("要是用fs模块，首先要从核心模块中加载； 使用 const fs= require('fs') ; 来引入")])]),e._v(" "),t("h3",{attrs:{id:"fs使用特点："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fs使用特点："}},[e._v("#")]),e._v(" fs使用特点：")]),e._v(" "),t("ol",[t("li",[e._v("fs模块中的所有操作都有两种形式可供选择同步和异步，")]),e._v(" "),t("li",[e._v("同步文件系统会阻塞程序的执行，也就是除非操作完毕，否则不会向下执行代码。")]),e._v(" "),t("li",[e._v("异步文件系统不会阻塞程序的执行，而是在操作完成时，通过回调函数将结果返回。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//1\\. 引入模块\nconst fs= require("fs");\n// console.log(fs)\n\n//2\\. 打开文件\n// fs.open 异步读取（通常用异步 需设置回调函数）  \n// fs.openSync 同步读取（读取时会阻塞线程）\n\nlet hello = fs.openSync("hello.txt", "w");\n//                     不存在会自动新建\n\n//3\\. 写入内容\nfs.writeFileSync(hello,\'hello word!\');\n\n//4\\. 保存并退出\nfs.closeSync(hello);\n\n')])])]),t("p",[t("a",{attrs:{href:"https://github.com/AnsonZnl/StudyNodeJS/blob/master/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E8%AF%BE%E6%97%B630-%E8%AF%BE%E6%97%B634%E7%AC%94%E8%AE%B0.md#%E8%AF%BE%E6%97%B631",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"文件操作："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件操作："}},[e._v("#")]),e._v(" 文件操作：")]),e._v(" "),t("ol",[t("li",[e._v("打开文件：\n"),t("code",[e._v("fs.open(path,flags[,mode],callback)")]),e._v("\n异步打开 异步都是回调 回调嵌套回调\n"),t("code",[e._v("fs.openSync(path,flags[,mode])")]),e._v("\n同步打开")])]),e._v(" "),t("p",[e._v("文件标记（flags）： "),t("a",{attrs:{href:"http://nodejs.cn/api/fs.html#fs_fs_open_path_flags_mode_callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://nodejs.cn/api/fs.html#fs_fs_open_path_flags_mode_callback"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("一、同步打开文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    //1\\. 引入模块 \n    let fs = require('fs');\n\n    //2.打开文件 同步\n    var fd=fs.openSync('1.txt', 'w');\n\n    //3.写入内容\n    fs.writeFileSync(fd,\"hello world!\"); \n\n    //4\\. 保存并关闭\n    fs.closeSync(fd);\n")])])]),t("p",[e._v("二、异步打开文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("   //1.引入模块\n   let fs = require('fs');\n\n   //2\\. 打开文件\n   fs.open('1.txt', 'a', (err, fd)=>{\n       //2.1判断是否出错\n       if(!err){\n           //正确 2.2写入文件\n           fs.writeFile(fd, \"今天天.....气真好！\", (err)=>{\n                //2.2.1 写入成功\n                if(!err){\n                    console.log('写入成功');\n                }else{\n                    throw err;\n                }\n                //2.3 关闭文件\n                fs.close(fd, (err)=>{\n                    if(!err){\n                        console.log('文件以保存并关闭')\n                    }else{\n                        throw err;\n                    }\n                })\n           })\n       }else{\n           throw err;\n       }\n   })\n\n")])])]),t("p",[t("a",{attrs:{href:"https://github.com/AnsonZnl/StudyNodeJS/blob/master/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E8%AF%BE%E6%97%B630-%E8%AF%BE%E6%97%B634%E7%AC%94%E8%AE%B0.md#%E8%AF%BE%E6%97%B632",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"使用文件流写入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用文件流写入"}},[e._v("#")]),e._v(" 使用文件流写入")]),e._v(" "),t("p",[e._v("文件流写入： "),t("a",{attrs:{href:"http://nodejs.cn/api/fs.html#fs_fs_createwritestream_path_options",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://nodejs.cn/api/fs.html#fs_fs_createwritestream_path_options"),t("OutboundLink")],1)]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//同步操作\n\n//1\\. 引入模块\nlet fs= require('fs');\n\n//2.建立通道\nlet ws = fs.createWriteStream('fsw.txt')\n\n//3.打开通道\nws.once('open', ()=>{\n    console.log('通道已经打开');\n})\n\nws.once('close', ()=>{\n    console.log('通道已经关闭');\n})\n\n//4\\. 写入内容\nws.write('我爱你，');\nws.write('我爱你，');\nws.write('我爱你，');\n\n")])])]),t("p",[t("a",{attrs:{href:"https://github.com/AnsonZnl/StudyNodeJS/blob/master/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E8%AF%BE%E6%97%B630-%E8%AF%BE%E6%97%B634%E7%AC%94%E8%AE%B0.md#%E8%AF%BE%E6%97%B633",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"读写文件："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读写文件："}},[e._v("#")]),e._v(" 读写文件：")]),e._v(" "),t("p",[e._v("文档地址："),t("a",{attrs:{href:"http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callback",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://nodejs.cn/api/fs.html#fs_fs_readfile_path_options_callback"),t("OutboundLink")],1),e._v("\n读取文档：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//1\\. 引入模块\nlet fs = require('fs');\n\n//2\\. 读取文件\nfs.readFile('source/hello.txt','utf8',(err,data)=>{\n    //判断是否成功\n    if(!err){\n        console.log(data);//\n        // console.log(data.toString());\n        //data 默认读取的是二进制 使用toString() 方法转换成\n    }else{\n        throw err;\n    }\n})\n\n读取图片：\n\n//3\\. 读取图片\nfs.readFile(\"source/psb.jpg\",(err,data)=>{\n    //判断是否成功\n    if(!err){\n        //写入图片\n        fs.writeFile('img.jpg', data, (err)=>{\n            if(!err){\n                console.log('写入成功！')\n            }else{\n                throw err;\n            }\n        })\n    }else{\n        throw err;\n    }\n});\n\n")])])]),t("p",[t("a",{attrs:{href:"https://github.com/AnsonZnl/StudyNodeJS/blob/master/%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/%E8%AF%BE%E6%97%B630-%E8%AF%BE%E6%97%B634%E7%AC%94%E8%AE%B0.md#%E8%AF%BE%E6%97%B634",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("p",[t("strong",[e._v("读取视频:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//1\\. 引入模块\nlet fs= require('fs');\n\n//2\\. 读取视频\nfs.readFile('source/cddbb.mp4', (err, data)=>{\n    if(!err){\n        // 写入视频\n        fs.writeFile('nmx.mp4', data, (err)=>{\n            if(!err){\n                console.log('写入成功！');\n            }else{\n                throw err;\n            }\n        })\n    }else{\n        throw err;\n    }\n})\n\n//3\\. 流式文件的读入（批量文件处理）\nlet re= fs.createReadStream('source/cddbb.mp4');\n//建立读取流\nlet ws= fs.createWriteStream('新建的视频.mp4');\n//建立写入流\n\n//4\\. 创建管道\nre.pipe(ws);//文件流传输\nconsole.log('文件流传输完成')\n")])])]),t("p",[e._v("参考："),t("a",{attrs:{href:"https://www.jb51.net/article/133553.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("详解NodeJS文件系统fs"),t("OutboundLink")],1),e._v("\n我的GitHub总结的"),t("a",{attrs:{href:"https://github.com/AnsonZnl/StudyNodeJS",target:"_blank",rel:"noopener noreferrer"}},[e._v("NodeJS笔记"),t("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=s.exports}}]);