(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{401:function(e,o,n){"use strict";n.r(o);var a=n(43),s=Object(a.a)({},(function(){var e=this,o=e.$createElement,n=e._self._c||o;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("hr"),e._v(" "),n("h2",{attrs:{id:"title-初试mongodb学习之mongoose的使用date-2018-11-23-17-28-55tags-nodejs-mongodb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#title-初试mongodb学习之mongoose的使用date-2018-11-23-17-28-55tags-nodejs-mongodb"}},[e._v("#")]),e._v(' title: 初试MongoDB学习之Mongoose的使用\ndate: 2018-11-23 17:28:55\ntags: ["NodeJS","MongoDB"]')]),e._v(" "),n("h3",{attrs:{id:"mongoose简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose简介"}},[e._v("#")]),e._v(" mongoose简介")]),e._v(" "),n("p",[e._v("mongoose官网：https://mongoosejs.com/")]),e._v(" "),n("h4",{attrs:{id:"为什么要用mongoose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用mongoose"}},[e._v("#")]),e._v(" 为什么要用Mongoose")]),e._v(" "),n("blockquote",[n("p",[e._v("Mongoose就是一个让我们可以通过Node来操作MongoDB的一个模块。\nMongoose本质是一个对象文档模型（ODM）库，\n他对Node原生的MongoDB模块进行了一部优化封装，并且提供了更多的功能。")])]),e._v(" "),n("h4",{attrs:{id:"mongoose的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose的优势"}},[e._v("#")]),e._v(" Mongoose的优势")]),e._v(" "),n("ol",[n("li",[e._v("可以像操作对象一样操作数据库")]),e._v(" "),n("li",[e._v("可以为文档创建一个模式结构（Schema）")]),e._v(" "),n("li",[e._v("可以对模型中的文档/文档进行验证")]),e._v(" "),n("li",[e._v("数据可以通过类型转换为对象模型")]),e._v(" "),n("li",[e._v("可以使用中间件来应用业务逻辑挂钩")]),e._v(" "),n("li",[e._v("比Node原生的MongoDB驱动更容易")])]),e._v(" "),n("h4",{attrs:{id:"使用mongoose"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用mongoose"}},[e._v("#")]),e._v(" 使用Mongoose")]),e._v(" "),n("ol",[n("li",[n("p",[e._v("下载安装mongoose模块\n"),n("code",[e._v("cnpm install mongoose --save")])])]),e._v(" "),n("li",[n("p",[e._v("引用mongoose：\n"),n("code",[e._v('var mongoose =require("mongoose");')])])]),e._v(" "),n("li",[n("p",[e._v('使用"mongoose"连接数据库：\n'),n("code",[e._v('var db =mongoose.connect("mongodb://user:pass@localhost:port/database");')])])]),e._v(" "),n("li",[n("p",[e._v("执行下面代码检查默认数据库test，是否可以正常连接成功?")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('var mongoose =require("mongoose");\nvar db =mongoose.connect("mongodb://localhost/m_data");\ndb.connection.on("error",function (error) {\n   console.log("数据库连接失败：" + error);\n});\ndb.connection.on("open",function () {\n   console.log("数据库连接成功！");\n});\ndb.connection.once(\'close\', ()=>{\n    console.log(\'连接已经断开成功！\')\n})\n')])])]),n("h3",{attrs:{id:"mongoose基本使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose基本使用"}},[e._v("#")]),e._v(" mongoose基本使用")]),e._v(" "),n("h4",{attrs:{id:"mongoose的几个新的对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose的几个新的对象"}},[e._v("#")]),e._v(" mongoose的几个新的对象")]),e._v(" "),n("p",[e._v("在MongoDB中，多个Document可以组成Collection(以下简称集合)，多个集合又可以组成数据库。我们想要操作MongoDB数据，那就得先要具备上面所说的包含数据的“文档”，文档又是什么意思呢，请看如下介绍。")]),e._v(" "),n("ol",[n("li",[n("strong",[e._v("文档")]),e._v(" —— 是MongoDB的核心概念，是键值对的一个有序集，在JavaScript里文档被表示成对象。同时它也是MongoDB中数据的基本单元，非常类似于关系型数据库管理系统中的行，但更具表现力。")]),e._v(" "),n("li",[n("strong",[e._v("集合")]),e._v(" —— 由一组文档组成，如果将MongoDB中的一个文档比喻成关系型数据库中的一行，那么一个集合就相当于一张表。")]),e._v(" "),n("li",[n("strong",[e._v("Schema")]),e._v("—— 一种以文件形式存储的数据库模型骨架，无法直接通往数据库端，也就是说它不具备对数据库的操作能力，仅仅只是"),n("strong",[e._v("定义数据的类型")]),e._v("，可以说是数据属性模型(传统意义的表结构)，又或着是“集合”的模型骨架。\n"),n("strong",[e._v("mongoose中任何任何事物都是从Schema开始的")]),e._v("。每一个Schema对应MongoDB中的一个集合(collection)。Schema中定义了集合中文档(document)的样式。")])]),e._v(" "),n("h4",{attrs:{id:"定义一个schema（表-模式对象）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义一个schema（表-模式对象）"}},[e._v("#")]),e._v(" 定义一个Schema（表/ 模式对象）")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//新建Schema 定义规则/字段的规则\nlet Schema= mongoose.Schema;\n//定义personSchema的字段（规则）需要new一下 有点像构造函数的样子\nlet personSchema= new Schema({\n    name: String,\n    sex: String,\n    age: Number\n});\n")])])]),n("p",[n("strong",[e._v("基本属性类型有")]),e._v("：")]),e._v(" "),n("ul",[n("li",[e._v("String")]),e._v(" "),n("li",[e._v("Number")]),e._v(" "),n("li",[e._v("Date")]),e._v(" "),n("li",[e._v("Boolean")]),e._v(" "),n("li",[e._v("Buffer")]),e._v(" "),n("li",[e._v("ObjectId")]),e._v(" "),n("li",[e._v("Mixed")]),e._v(" "),n("li",[e._v("Array")])]),e._v(" "),n("p",[n("strong",[e._v("Model")]),e._v("—— 由Schema构造生成的模型，根据Schema定义的数据类型规则，可操作具体的符合改规则的数据。")]),e._v(" "),n("h4",{attrs:{id:"创建model（集合）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建model（集合）"}},[e._v("#")]),e._v(" 创建model（集合）")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let personModel= mongoose.model('person', personSchema);\n")])])]),n("p",[e._v("person：数据库中的集合名称,当我们对其添加数据时如果person已经存在，则会保存到其目录下，如果未存在，则会创建person集合，然后在保存数据。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//4. 插入文档\npersonModel.create({\n    name: '张宁乐',\n    sex: '男',\n    age: 18\n}, (err)=>{\n   if(!err){\n       console.log('插入成功！')\n   }else{\n       throw err;\n   }\n});\n")])])]),n("h3",{attrs:{id:"mongoose-插入和查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose-插入和查询"}},[e._v("#")]),e._v(" mongoose 插入和查询")]),e._v(" "),n("p",[e._v("mongoose查找数据的一些方法：\nhttps://mongoosejs.com/docs/api.html#model_Model.find")]),e._v(" "),n("h4",{attrs:{id:"插入多条数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入多条数据"}},[e._v("#")]),e._v(" 插入多条数据")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.create([\n    {name:'张逗逗',age: 2,sex: '男'},\n    {name:'牛嘻嘻',age: 2,sex: '女'}\n], (err)=>{\n   if(!err){\n       console.log('插入成功！')\n   }else{\n       throw err;\n   }\n})\n")])])]),n("h4",{attrs:{id:"查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[e._v("#")]),e._v(" 查询")]),e._v(" "),n("ul",[n("li",[e._v("Model.find()")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.find({name: '张宁乐'}, (err, data)=>{\n    if(!err){\n        console.log(data)\n    }else{\n        throw err;\n    }\n})\n")])])]),n("h4",{attrs:{id:"查询所有"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查询所有"}},[e._v("#")]),e._v(" 查询所有")]),e._v(" "),n("ul",[n("li",[e._v("Model.find({}, callback)")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.find({}, (err, data)=>{\n    if(!err){\n        console.log(data)\n    }else{\n        throw err;\n    }\n})\n")])])]),n("p",[e._v("也可以选择查找数据的条件（0隐藏 1显示 id默认显示） 和MongoDB在命令行中的使用方法一样")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("//查询时只显示name \npersonModel.find({}, {name: 1, _id: 0}, (err,data)=>{\n    if(!err){\n        console.log(data)\n    }else{\n        throw err;\n    }\n})\n")])])]),n("p",[e._v("在"),n("code",[e._v("find()")]),e._v("中  "),n("code",[e._v("skip")]),e._v("（查询开始的位置）和"),n("code",[e._v("limit")]),e._v("（增加的条数）也可以使用")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.find({}, {name: 1, _id: 0, age: 1}, {skip: 0, limit: 2}, (err, data)=>{\n    //只显示name 和 age   从第1开始 每次查询2条 \n    if(!err){\n        console.log(data)\n    }else{\n        throw err;\n    }\n})\n")])])]),n("p",[n("strong",[e._v("MongoDB的find()、findOne() 等命令在 mongoose里都可以使用")]),e._v("\n具体可参考 ：https://mongoosejs.com/docs/api.html#model_Model.find")]),e._v(" "),n("h3",{attrs:{id:"mongoose-修改和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongoose-修改和删除"}},[e._v("#")]),e._v(" mongoose 修改和删除")]),e._v(" "),n("p",[e._v("参考： https://mongoosejs.com/docs/api.html#model_Model.update")]),e._v(" "),n("h4",{attrs:{id:"修改方法："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改方法："}},[e._v("#")]),e._v(" 修改方法：")]),e._v(" "),n("ul",[n("li",[e._v("Model.update()")]),e._v(" "),n("li",[e._v("Model.updateMany()")]),e._v(" "),n("li",[e._v("Model.updateOne()")]),e._v(" "),n("li",[e._v("Model.watch()")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.update({name: '张宁乐'}, {$set: {age: 20}}, (err, data)=>{\n   if(!err){\n       console.log('修改成功！')\n       console.log(data)\n   }else{\n       throw err;\n   }\n})\n")])])]),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/7072486-22be72d3058566fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"4a9f49d480f66c5a64cb9a833459fdd.png"}})]),e._v(" "),n("h4",{attrs:{id:"删除方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除方法"}},[e._v("#")]),e._v(" 删除方法")]),e._v(" "),n("ul",[n("li",[e._v("Model.remove()")]),e._v(" "),n("li",[e._v("Model.deleteMany()")]),e._v(" "),n("li",[e._v("Model.deleteOne()")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.remove({name:'牛嘻嘻'}, (err)=>{\n    if(!err){\n        console.log('删除成功！')\n    }else{\n        throw err;\n    }\n})\n\n")])])]),n("h4",{attrs:{id:"统计文档条数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#统计文档条数"}},[e._v("#")]),e._v(" 统计文档条数")]),e._v(" "),n("ul",[n("li",[e._v("Model.count()")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("personModel.count({}, (err,count)=>{\n    if(!err){\n        console.log('查询条数成功！ 一共：' + count + '条');\n    }else{\n        throw err;\n    }\n})\n")])])]),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/7072486-25dcaed274322130.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"2b7684dc310af51ac7fb50e5daa1123.png"}})]),e._v(" "),n("h3",{attrs:{id:"entity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#entity"}},[e._v("#")]),e._v(" Entity")]),e._v(" "),n("p",[e._v("Entity—— 由Model创建的实体，使用save方法保存数据，Model和Entity的操作都能影响数据库的操作，但Model比Entity更具操作性。\n使用Model创建Entity，如下示例:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("let mongoose= require('mongoose');\nlet db= mongoose.connection('mongodb://localhost/m_data');\ndb.on('open', ()=>{\n    console.log('连接成功！')\n})\nlet Schema= mongoose.Schema;\nlet personSchema= new Schema({\n    name: String,\n    sex: String,\n    age: Number\n});\nlet personModel= mongoose.model('person', personSchema);\nlet personEntity = new personModel({\n    name: '许巍',\n    sex: '男',\n    age: 38\n})\npersonEntity.save((err, person)=>{\n    if(!err){\n        console.log('保存成功！')\n        console.log(person);\n    }else{\n        console.log('保存失败！')\n    }\n})\n")])])]),n("p",[n("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/7072486-cef62c6a437fa126.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"c85c9b12f87f890e10e74f23555c802.png"}})]),e._v(" "),n("p",[e._v("参考：https://blog.csdn.net/swimming_in_IT_/article/details/80723866")])])}),[],!1,null,null,null);o.default=s.exports}}]);