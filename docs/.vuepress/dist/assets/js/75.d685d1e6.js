(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{388:function(t,a,e){"use strict";e.r(a);var n=e(43),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("在写小程序的过程中会发现里面的有些使用和vue很相似，有相关基础上手并不是很难，难点主要在于js的逻辑交互，")]),t._v(" "),e("h2",{attrs:{id:"小程序的启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小程序的启动"}},[t._v("#")]),t._v(" 小程序的启动")]),t._v(" "),e("p",[t._v("微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。")]),t._v(" "),e("p",[t._v("紧接着通过 app.json 的 pages 字段就可以知道你当前小程序的所有页面路径:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('{  "pages":[    "pages/index/index",    "pages/logs/logs"\n  ]\n}\n')])])]),e("p",[t._v("这个配置说明在 QuickStart 项目定义了两个页面，分别位于 pages/index/index 和 pages/logs/logs 目录。而写在 pages 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。")]),t._v(" "),e("p",[t._v("于是微信客户端就把首页的代码装载进来，通过小程序底层的一些机制，就可以渲染出这个首页。")]),t._v(" "),e("p",[t._v("小程序启动之后，在 app.js 定义的 App 实例的 onLaunch 回调会被执行:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("App({\n  onLaunch: function () {    // 小程序启动之后 触发\n  }\n})\n")])])]),e("p",[t._v("整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 注册程序 App 。")]),t._v(" "),e("p",[t._v("接下来我们简单看看小程序的一个页面是怎么写的。")]),t._v(" "),e("p",[t._v("程序与页面")]),t._v(" "),e("p",[t._v("你可以观察到 pages/logs/logs 下其实是包括了4种文件的，微信客户端会先根据 logs.json 配置生成一个界面，顶部的颜色和文字你都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 logs.js，你可以看到 logs.js 的大体内容就是:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Page({\n  data: { // 参与页面渲染的数据\n    logs: []\n  },\n  onLoad: function () {    // 页面渲染后 执行\n  }\n})\n")])])]),e("p",[t._v("Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 data 数据和 index.wxml 一起渲染出最终的结构，于是就得到了你看到的小程序的样子。")]),t._v(" "),e("p",[t._v("在渲染完界面之后，页面实例就会收到一个 onLoad 的回调，你可以在这个回调处理你的逻辑。")]),t._v(" "),e("p",[t._v("有关于 Page 构造器更多详细的文档参考 注册页面 Page 。")]),t._v(" "),e("p",[t._v("组件")]),t._v(" "),e("p",[t._v("小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。")]),t._v(" "),e("p",[t._v("就像 HTML 的 div, p 等标签一样，在小程序里边，你只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，你需要在界面上显示地图，你只需要这样写即可：")]),t._v(" "),e("p",[e("map",[t._v("map>\n使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是广州，那么你需要声明地图的 longitude(中心经度) 和 latitude(中心纬度) 两个属性:")])]),t._v(" "),e("p",[e("map",{attrs:{longitude:"广州经度",latitude:"广州纬度"}},[t._v("map>\n组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，你可以在 js 编写 markertap 函数来处理：")])]),t._v(" "),e("p",[e("map",{attrs:{bindmarkertap:"markertap",longitude:"广州经度",latitude:"广州纬度"}},[t._v("map>\n当然你也可以通过 style 或者 class 来控制组件的外层样式，以便适应你的界面宽度高度等等。")])]),t._v(" "),e("p",[t._v("需要注意的是：多数 API 的回调都是异步，你需要处理好代码逻辑的异步问题。")]),t._v(" "),e("p",[t._v("更多的 API 能力见 "),e("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/api/?t=20171227",target:"_blank",rel:"noopener noreferrer"}},[t._v("小程序的API"),e("OutboundLink")],1),t._v(" 。\n其实小程序的官网教程讲的也很明白透彻，看官方教程就可以了，而且小程序有丰富的组件，使用时很方便的，\n"),e("img",{attrs:{src:"https://mp.weixin.qq.com/debug/wxadoc/dev/image/demo.png?t=201842",alt:""}})]),t._v(" "),e("p",[t._v("更多的组件可以参考 小程序的组件 。")]),t._v(" "),e("h2",{attrs:{id:"基础组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础组件"}},[t._v("#")]),t._v(" 基础组件")]),t._v(" "),e("p",[t._v("为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。")]),t._v(" "),e("p",[t._v("要获取用户的地理位置时，只需要：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("wx.getLocation({\n  type: 'wgs84',\n  success: (res) => {    var latitude = res.latitude // 经度\n    var longitude = res.longitude // 纬度\n  }\n})\n")])])]),e("p",[t._v("调用微信扫一扫能力，只需要：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("wx.scanCode({\n  success: (res) => {    console.log(res)\n  }\n})\n")])])]),e("p",[t._v("框架为开发者提供了一系列基础组件，开发者可以通过组合这些基础组件进行快速开发。")]),t._v(" "),e("p",[t._v("什么是组件：")]),t._v(" "),e("p",[t._v("组件是视图层的基本组成单元。\n组件自带一些功能与微信风格的样式。\n一个组件通常包括开始标签和结束标签，属性用来修饰这个组件，内容在两个标签之内。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<tagname property="value">\n  Content goes here ...\n</tagname>\n')])])]),e("p",[t._v("注意：所有组件与属性都是小写，以连字符-连接")]),t._v(" "),e("p",[t._v("属性类型")]),t._v(" "),e("p",[t._v('类型\t描述\t注解\nBoolean\t布尔值\t组件写上该属性，不管该属性等于什么，其值都为true，只有组件上没有写该属性时，属性值才为false。如果属性值为变量，变量的值会被转换为Boolean类型\nNumber\t数字\t1, 2.5\nString\t字符串\t"string"\nArray\t数组\t[ 1, "string" ]\nObject\t对象\t{ key: value }\nEventHandler\t事件处理函数名\t"handlerName" 是 Page中定义的事件处理函数名\nAny\t任意属性\n共同属性类型')]),t._v(" "),e("p",[t._v("所有组件都有的属性：")]),t._v(" "),e("p",[t._v("属性名\t类型\t描述\t注解\nid\tString\t组件的唯一标示\t保持整个页面唯一\nclass\tString\t组件的样式类\t在对应的 WXSS 中定义的样式类\nstyle\tString\t组件的内联样式\t可以动态设置的内联样式\nhidden\tBoolean\t组件是否显示\t所有组件默认显示\ndata-*\tAny\t自定义属性\t组件上触发的事件时，会发送给事件处理函数\nbind* / catch*\tEventHandler\t组件的事件\t详见事件\n特殊属性")]),t._v(" "),e("p",[t._v("几乎所有组件都有各自定义的属性，可以对该组件的功能或样式进行修饰，请参考各个组件的定义。")]),t._v(" "),e("h2",{attrs:{id:"视图容器-view-container-：view视图容器scroll-view可滚动视图容器swiper滑块视图容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#视图容器-view-container-：view视图容器scroll-view可滚动视图容器swiper滑块视图容"}},[t._v("#")]),t._v(" 视图容器(View Container)：\nview\t视图容器\nscroll-view\t可滚动视图容器\nswiper\t滑块视图容")]),t._v(" "),e("h2",{attrs:{id:"基础内容-basic-content-：icon图标text文字progress进度条"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础内容-basic-content-：icon图标text文字progress进度条"}},[t._v("#")]),t._v(" 基础内容(Basic Content)：\nicon\t图标\ntext\t文字\nprogress\t进度条")]),t._v(" "),e("h2",{attrs:{id:"表单-form-：button按钮form表单input输入框checkbox多项选择器radio单项选择器picker列表选择器picker-view内嵌列表选择器slider滚动选择器switch开关选择器label标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表单-form-：button按钮form表单input输入框checkbox多项选择器radio单项选择器picker列表选择器picker-view内嵌列表选择器slider滚动选择器switch开关选择器label标签"}},[t._v("#")]),t._v(" 表单(Form)：\nbutton\t按钮\nform\t表单\ninput\t输入框\ncheckbox\t多项选择器\nradio\t单项选择器\npicker\t列表选择器\npicker-view\t内嵌列表选择器\nslider\t滚动选择器\nswitch\t开关选择器\nlabel\t标签")]),t._v(" "),e("h2",{attrs:{id:"导航-navigation-：navigator应用链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导航-navigation-：navigator应用链接"}},[t._v("#")]),t._v(" 导航(Navigation)：\nnavigator\t应用链接")]),t._v(" "),e("h2",{attrs:{id:"多媒体-media-：audio音频image图片video视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多媒体-media-：audio音频image图片video视频"}},[t._v("#")]),t._v(" 多媒体(Media)：\naudio\t音频\nimage\t图片\nvideo\t视频")]),t._v(" "),e("h2",{attrs:{id:"地图-map-：map地图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#地图-map-：map地图"}},[t._v("#")]),t._v(" 地图(Map)：\nmap\t地图")]),t._v(" "),e("p",[t._v("画布(Canvas)：\ncanvas\t画布")])])}),[],!1,null,null,null);a.default=s.exports}}]);