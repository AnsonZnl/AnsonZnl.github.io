(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{402:function(n,t,e){"use strict";e.r(t);var o=e(43),r=Object(o.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"在小程序中调用一言api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在小程序中调用一言api"}},[n._v("#")]),n._v(" 在小程序中调用一言API")]),n._v(" "),e("p",[n._v("某一次在csdn看博客，看到了一个功能，就是可以随机显示一句话，都是特别经典的句子，后来便发挥了厚面皮的精神，就去私信问是怎么做的，二话没说那兄弟发给我一个网站，")]),n._v(" "),e("p",[e("a",{attrs:{href:"https://hitokoto.cn/",target:"_blank",rel:"noopener noreferrer"}},[n._v("一言"),e("OutboundLink")],1)]),n._v(" "),e("blockquote",[e("p",[n._v("这个网站是干什么的？\n一言网(Hitokoto.cn)创立于2016年，隶属于萌创Team，目前网站主要提供一句话服务。\n动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。如果可以，我们希望我们没有停止服务的那一天。\n简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。\n或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。*\n*:本段文本源自hitokoto.us.")])]),n._v(" "),e("p",[n._v("在**"),e("a",{attrs:{href:"https://hitokoto.cn/",target:"_blank",rel:"noopener noreferrer"}},[n._v("一言网"),e("OutboundLink")],1),n._v("**上提供了可调用的API")]),n._v(" "),e("p",[e("a",{attrs:{href:"https://hitokoto.cn/api",target:"_blank",rel:"noopener noreferrer"}},[n._v("一言API接口说明"),e("OutboundLink")],1),n._v("\n按照他给的参数和返回json数据，成功的在网页中调用了出来\n"),e("a",{attrs:{href:"http://zhangningle.gitee.io/javascript-demo/%E4%B8%80%E8%A8%80.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("我的一言deom"),e("OutboundLink")],1),n._v("\n代码展示:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\n<!DOCTYPE html>\n<html lang="zh-CN">\n\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta http-equiv="X-UA-Compatible" content="ie=edge">\n  <title>一言</title>\n  <style>\n    div {\n      width: 500px;\n      margin: auto;\n      text-align: center;\n    }\n    #hitokoto{\n      font-size: 27px;\n    }\n    p {\n      font-size: 20px;\n    }\n\n    #btn {\n      padding: 15px 50px;\n      border: 0;\n      background: #00caeb;\n      color: #fff;\n      font-size: 22px;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n\n    .cc{\n      display: block;\n      text-align: right;\n      padding-right: 20px;\n      font-size: 25px;\n    }\n  </style>\n</head>\n\n<body>\n  <div>\n    <p id="hitokoto"></p>\n    <p class="cc">『\n      <span id="from"></span>』</p>\n  </div>\n  <div>\n    <button id="btn" onclick="window.location.reload();">\n      换一换\n    </button>\n  </div>\n  \x3c!-- 以下写法，选取一种即可 --\x3e\n\n  \x3c!-- 现代写法，推荐 --\x3e\n  \x3c!-- 兼容低版本浏览器 (包括 IE)，可移除 --\x3e\n  <script src="https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js"><\/script>\n  <script src="https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js"><\/script>\n  \x3c!--End--\x3e\n  <script>\n    fetch(\'https://v1.hitokoto.cn\')\n      .then(function (res) {\n        return res.json();\n      })\n      .then(function (data) {\n        var hitokoto = document.getElementById(\'hitokoto\');\n        hitokoto.innerText = data.hitokoto;\n      })\n      .catch(function (err) {\n        console.error(err);\n      })\n  <\/script>\n\n  \x3c!-- 老式写法，兼容性最忧 --\x3e\n  <script>\n    \n    var xhr = new XMLHttpRequest();\n    xhr.open(\'get\', \'https://v1.hitokoto.cn\');\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        var data = JSON.parse(xhr.responseText);\n        var hitokoto = document.getElementById(\'hitokoto\');\n        var from = document.getElementById(\'from\');\n        hitokoto.innerText = data.hitokoto;\n        from.innerText = data.from;\n      }\n    }\n    xhr.send();\n  <\/script>\n\n  \x3c!-- 新 API 方法， 十分简洁 --\x3e\n  <script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer><\/script>\n</body>\n\n</html>\n')])])]),e("p",[n._v("正好最近也在开发小程序，就心里痒痒。\n想试试小程序中可不可以调用这个api，\n小程序中")]),n._v(" "),e("blockquote",[e("p",[n._v("url：这个是要请求的接口地址\ndata：一个入参\nmethod：请求方式，如果是POST请求必须按上面写，默认是get请求，不用处理。\ncomplete：页面请求完成后的方法，通过that.setData将数据传递给WXML页面。\nsuccess：页面加载成功后的执行方法。")])]),n._v(" "),e("p",[n._v("如图：\n"),e("img",{attrs:{src:"http://p0bnwspy9.bkt.clouddn.com/yiyxcv.gif"}}),n._v("\njs代码：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function () {\n    var that=this\n    wx.request({\n      url: 'https://v1.hitokoto.cn',\n      header:{\n        'content-type': 'application/json'\n      },\n      success: function (res){\n        console.log(res.data)\n        that.setData({\n          list: res.data\n        })\n      }\n    })\n  },\n")])])]),e("p",[n._v("看完这个代码，你会想，根据微信小程序的绑定原理，这里边的代码哪里调用了onLoad（）这个函数，不用多想，微信小程序给你省略了这些步骤。直接调用list这个数组就行。")])])}),[],!1,null,null,null);t.default=r.exports}}]);