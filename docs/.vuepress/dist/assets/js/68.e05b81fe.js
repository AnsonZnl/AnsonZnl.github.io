(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{404:function(t,e,a){"use strict";a.r(e);var n=a(43),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("因为业务需要在小程序里加上很多的弹窗，就想写一个组件来实现；")]),t._v(" "),a("h2",{attrs:{id:"创建组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建组件"}},[t._v("#")]),t._v(" 创建组件")]),t._v(" "),a("ol",[a("li",[t._v("新建文件夹"),a("code",[t._v("component")]),t._v("专门放组件，")]),t._v(" "),a("li",[t._v("新建popup页面，在popup.json中设置：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n    "component": true\n}\n')])])]),a("p",[t._v("表明它是一个组件，我们称之为“子组件”\n3. 注意：在组件wxss中不应使用ID选择器、属性选择器和标签名选择器。（只使用class）")]),t._v(" "),a("h2",{attrs:{id:"如何使用组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用组件"}},[t._v("#")]),t._v(" 如何使用组件")]),t._v(" "),a("p",[t._v("便于区分，引用子组件的页面我们称之为“父组件，”\n在父组件的json里先引用子组件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "usingComponents": {\n    "component-tag-name": "path/to/the/custom/component"\n  }\n}\n')])])]),a("h2",{attrs:{id:"父组件传值给子组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父组件传值给子组件"}},[t._v("#")]),t._v(" 父组件传值给子组件")]),t._v(" "),a("p",[t._v("因为这个自定义的弹窗组件会应用于很多不同的页面，所以显示的弹窗标题也是不同的，这就是需要父组件给子组件自定义标题，也就是子组件的标题应该从父组件中接受到的。\n子组件里：\nwxml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view class="page">\n  <view>{{popupTitle}}</view>\n</view>\n')])])]),a("p",[t._v("js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Component({\n  properties: {\n    // 这里定义了innerText属性，属性值可以在组件使用时指定\n    popupTitle: { //弹窗标题\n      type: String,\n      value: '默认值', \n    }\n  },\n})\n")])])]),a("p",[t._v("父组件里：\nwxml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<popup popup-title="{{pagetitle}}"/>\n')])])]),a("p",[t._v("js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  data: {\n    pagetitle: '我是页面标题',\n}\n")])])]),a("p",[t._v(". 在子组件中自定义值是以小驼峰的形式书写的，但是在父组件传的时候要以“-”连接。")]),t._v(" "),a("h2",{attrs:{id:"子组件改变父组件的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子组件改变父组件的值"}},[t._v("#")]),t._v(" 子组件改变父组件的值")]),t._v(" "),a("p",[t._v("这个组件的显示和隐藏都是在父组件决定的，但是因为我这是一个全屏的弹窗，覆盖了整个屏幕，所以想要关闭弹框只能想办法在子组件的点击事件上想办法。\n基本逻辑是这样的：\n操作流程：打开页面- 点击弹框（弹出子组件）- 点击关闭（点击子组件关闭弹窗）\n数据流程：打开页面-点击弹框（传入弹窗标题、点赞成功结果、其他参数）-点击关闭（在父组件上自定义组件，然后子组件关闭按钮监听onTap事件，点击子组件关闭按钮时，会通知父组件去改变状态）")]),t._v(" "),a("p",[t._v("逻辑：")]),t._v(" "),a("ol",[a("li",[t._v("在子组件中给要触发的元素加  bindtap = 'onTap'")]),t._v(" "),a("li",[t._v("然后通过在method中设置onTap函数")]),t._v(" "),a("li",[t._v("在onTap中的triggerEvent中设置要触发父组件事件的函数名称")]),t._v(" "),a("li",[t._v("父组件接收到字组件的消息，然后触发事件")])]),t._v(" "),a("p",[t._v("具体参考："),a("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("小程序-组件通信"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("子组件：\nwxml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view class="hide-btn" bindtap="onTap">×</view>\n')])])]),a("p",[t._v("js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  methods: { //放自定义的方法\n    onTap: function () {\n      var myEventDetail = {} // detail对象，提供给事件监听函数\n      var myEventOption = {} // 触发事件的选项\n      console.log(`子组件：'向父组件发送通知，我要关闭弹窗'`)\n      this.triggerEvent('hidepopop', myEventDetail, myEventOption)\n    }\n  },\n")])])]),a("p",[t._v("父组件\nwxml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  <popup \nbindhidepopop="hidePopop" \nis-show-popup="{{isShowPopup}}" \npopup-title="{{popupTitle}}" \npopup-content="{{popupContent}}"\n/>\n')])])]),a("p",[t._v("js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  hidePopop: function(e) {\n    console.log(e.detail) // 自定义组件触发事件时提供的detail对象\n    console.log('父组件：我接受到了子组件的关闭弹窗的通知！');\n    this.setData({\n      isShowPopup: true\n    })\n  }\n")])])]),a("p",[t._v("参考"),a("a",{attrs:{href:"%5Bhttps://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/%5D(https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/)"}},[t._v("小程序-自定义组件")]),t._v("\n代码地址："),a("a",{attrs:{href:"https://github.com/AnsonZnl/wx-component-popup",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/AnsonZnl/wx-component-popup"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);