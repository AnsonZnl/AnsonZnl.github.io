(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{411:function(n,e,t){"use strict";t.r(e);var a=t(43),o=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"双向数据绑定的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双向数据绑定的原理"}},[n._v("#")]),n._v(" 双向数据绑定的原理")]),n._v(" "),t("p",[n._v("在学习Vue和Angular过程中都有一个双向数据绑定的一个东西，Vue中是v-model ,Angular中是ng-model,那他们是怎么实现的，\n先说是怎么实现的吧，自己也网上找了一下实现的方法，找到了一个比较简洁的实现方法(可能不是vue或者angular源码的实现方法)，仅自己理解的实现方法。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<div class="box">\n     <input type="text" id="model">\n     <span id="bind"></span>\n</div>\n\n')])])]),t("p",[n._v("js代码：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<script>\n        model=document.getElementById("model");\n        bind=document.getElementById("bind");\n        \n        window.onload=function(){\n            model.oninput=function(){\n                bind.innerHTML=model.value;\n            }\n        }\n<\/script>\n\n')])])]),t("blockquote",[t("p",[n._v("定义和用法\noninput 事件在用户输入时触发。\n该事件在 "),t("code",[n._v("<input>")]),n._v("或 "),t("code",[n._v("<textarea>")]),n._v("元素的值发生改变时触发。\n提示： 该事件类似于 onchange 事件。不同之处在于 oninput 事件在元素值发生变化是立即触发， onchange 在元素失去焦点时触发。另外一点不同是 onchange 事件也可以作用于 "),t("code",[n._v("<keygen>")]),n._v(" 和 "),t("code",[n._v("<select>")]),n._v(" 元素。")])]),n._v(" "),t("p",[t("strong",[n._v("逻辑就是使用oninput事件获取每次输入input的value的值，然后使用innerHTML赋给span")])])])}),[],!1,null,null,null);e.default=o.exports}}]);